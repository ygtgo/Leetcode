Given a non-empty array of digits representing a non-negative integer, plus one to the integer.

The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

You may assume the integer does not contain any leading zero, except the number 0 itself.

Example 1:

Input: [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Example 2:

Input: [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
思路：由于存在进位问题，从尾到头判断是否为9，是则赋值为0，不是则直接加1返回，最后判断第一位是否为0，为0则说明进位了在数组最前面加1
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int n = digits.size();
        for (int i = n-1; i >= 0; --i){
            if (digits[i] == 9)
                digits[i] = 0;
            else{
                digits[i] += 1;
                return digits;
            }
        }
        if(digits.front() == 0)
            digits.insert(digits.begin(), 1);
        return digits;
    }
};
