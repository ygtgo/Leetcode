Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 

Input: 19
Output: true
Explanation: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1


solution
class Solution {
public:
    bool isHappy(int n) {
        set<int> s;
        while (n != 1){
            int t = 0;
            while(n){
                t += (n % 10) * (n % 10);
                n /= 10;
            }
            n = t;
            if (s.count(n))     //count 用来查找set中某个键值出现的次数，因为一个键值在set 中值能出现0 次或 1次 这样就变成了判断某一个键值是否在set中出现过
                break;
            else
                s.insert(n);
        }
        return n == 1;    //判断是否与1相等
    } 
};
