Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

思路：使用投票法，将第一个数作为众数，计数器记为1，之后当遇到相等的数 则计数器+1，遇到不同数时计数器-1，直到0时，重新将当前数作为众数
      使用投票法的两个前提，1.一定存在众数 2.一定有一个存在超过半数的数字存在
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int res = 0,cnt = 0;
        for (int num : nums){
            if (cnt == 0){
                res = num;
                ++cnt;
            }else{
                (num == res) ? ++cnt : --cnt;
            }
        }
           return res;
    }
};
