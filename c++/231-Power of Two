
给定一个整数，编写一个函数来判断它是否是 2 的幂次方。

示例 1:

输入: 1
输出: true
解释: 20 = 1
示例 2:

输入: 16
输出: true
解释: 24 = 16
示例 3:

输入: 218
输出: false


思路一： 
1     2       4         8         16 　　....

1    10    100    1000    10000　....对应的二进制

观察二进制，2的幂 相加起来都是1,利用位运算，每次与最低位相与，然后右移一位，最后判断相加是否为1
class Solution {
public:
    bool isPowerOfTwo(int n) {
        int cnt = 0;
        while(n > 0){
            cnt += (n & 1);
            n >>= 1;  //右移一位
        }
        return cnt == 1;
    }
};

思路二
最高位必然为1,其余为0, 减一的话则最高位降一位，其余位都变为1，把两数相与，就会得到0
class Solution {
public:
    bool isPowerOfTwo(int n) {
        return (n > 0) && (!(n & (n - 1)));
    }
};
