Design and implement a TwoSum class. It should support the following operations:add and find.

add - Add the number to an internal data structure.
find - Find if there exists any pair of numbers which sum is equal to the value.

For example,
add(1); add(3); add(5);
find(4) -> true
find(7) -> false
思路：利用哈希表 把每个数字和其出现的次数建立映射，然后遍历哈希表，
对于每个值，我们先求出此值和目标值之间的差值t，然后我们需要分两种情况来看，
如果当前值不等于差值t，那么只要哈希表中有差值t就返回True，或者是当差值t等于当前值时，
如果此时哈希表的映射次数大于1，则表示哈希表中还有另一个和当前值相等的数字，二者相加就是目标值
class TwoSum{
public:
        void add(int number){
                ++m[number];
        }
        bool find(int value){
                for(auto a : m){          //遍历每个元素
                      int t = value - a.first;
                      if((t != a.first && m.count(t)) || (t == a.first && a.secend > 1)){   
                      //1.如果不等于该值且哈希表存在与差值相同的值 2.如果等于该值且还存在另一个与T相等的值
                        return true;
                      }
                }
                return false;
        }
  private:
          unordered_map<int,int>m;
};
