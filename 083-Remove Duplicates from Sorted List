Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

思路：定义指针指向第一个元素，然后第一个元素和第二个元素进行比较，如果重复则删除第二个元素，如果不重复指针指针指向第二个元素
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head || !head->next)
            return head;
        ListNode *start = head;   //定义指针指向第一个元素
        while (start && start->next){
            if (start->val == start->next->val){
                ListNode *tmp = start->next;
                start->next = start->next->next;
                delete tmp;
            }else
                start = start->next;
        }
        return head;
    }
};
