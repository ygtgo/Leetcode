Employee 表包含所有员工信息，每个员工有其对应的 Id, salary 和 department Id 。

+----+-------+--------+--------------+
| Id | Name  | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Henry | 80000  | 2            |
| 3  | Sam   | 60000  | 2            |
| 4  | Max   | 90000  | 1            |
| 5  | Janet | 69000  | 1            |
| 6  | Randy | 85000  | 1            |
+----+-------+--------+--------------+
Department 表包含公司所有部门的信息。

+----+----------+
| Id | Name     |
+----+----------+
| 1  | IT       |
| 2  | Sales    |
+----+----------+
编写一个 SQL 查询，找出每个部门工资前三高的员工。例如，根据上述给定的表格，查询结果应返回：

+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Randy    | 85000  |
| IT         | Joe      | 70000  |
| Sales      | Henry    | 80000  |
| Sales      | Sam      | 60000  |
+------------+----------+--------+


select 
    d.name as Department, a.name as Employee, a.salary 
from 
    Employee a
        join
    Department d on a.DepartmentId = d.Id
WHERE                                     --要选出工资前3，即部门内比较，选出部门内中超过员工的工资的员工不超过3 
    (SELECT
        COUNT(DISTINCT b.salary)
     FROM
        Employee b
     where
        b.salary > a.salary
            AND a.DepartmentId = b.DepartmentId
    ) < 3
    
    soultion 2
    利用SQL 的 DENSE_RANK() over()
SELECT a.Department, a.Employee, a.Salary FROM
(
Select b.Name as Department,a.Name as Employee,a.salary As Salary,
DENSE_RANK() over (PARTITION BY b.Name ORDER BY a.Salary DESC)  as dept_sal_rank
from #Employee a
INNER JOIN #Department b ON a.DepartmentId = b.Id ) a

where a.dept_sal_Rank <=3
